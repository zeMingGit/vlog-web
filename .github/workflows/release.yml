name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Zip dist folder
        run: zip -r dist.zip .vitepress/dist/

      - name: Run semantic-release dry-run
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release --dry-run

      - name: Configure git user
        run: |
          git config user.name "semantic-release[bot]"
          git config user.email "bot@users.noreply.github.com"

      - name: Create release branch and commit changes
        run: |
          git checkout -b release-pr-branch
          git add CHANGELOG.md package.json
          git commit -m "chore: release artifacts [skip ci]" || echo "No changes to commit"
          git push --set-upstream origin release-pr-branch
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Install GitHub CLI
        run: |
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
          sudo apt-add-repository https://cli.github.com/packages
          sudo apt update
          sudo apt install -y gh

      - name: Create Pull Request with gh CLI
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          echo $GH_TOKEN | gh auth login --with-token
          gh pr create --title "chore: release artifacts" --body "Release files generated by semantic-release" --base main --head release-pr-branch --label automated

      - name: Auto merge PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const prs = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:release-pr-branch`,
              state: 'open'
            });
            if (prs.data.length > 0) {
              const pr = prs.data[0];
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                merge_method: 'squash'
              });
              console.log(`Merged PR #${pr.number}`);
            } else {
              console.log("No matching PR found");
            }
